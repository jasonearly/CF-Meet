{"version":3,"sources":["Alert.js","CitySearch.js","Event.js","EventList.js","NumberOfEvents.js","mock-data.js","api.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["Alert","props","getStyle","color","className","style","this","text","Component","InfoAlert","ErrorAlert","CitySearch","state","query","suggestions","showSuggestions","handleInputChanged","event","value","target","setState","locations","filter","location","toUpperCase","indexOf","length","infoText","handleItemClicked","suggestion","updateEvents","type","onChange","onFocus","display","map","onClick","Event","showDetails","handleShowDetails","summary","start","dateTime","description","end","timeZone","organizer","email","EventList","events","id","NumberOfEvents","numberOfEvents","mockData","kind","etag","status","htmlLink","created","updated","creator","self","recurringEventId","originalStartTime","iCalUID","sequence","reminders","useDefault","removeQuery","window","history","pushState","pathname","newurl","protocol","host","checkToken","accessToken","a","fetch","then","res","json","error","catch","extractLocations","Set","getEvents","NProgress","href","startsWith","done","navigator","onLine","localStorage","getItem","JSON","parse","getAccessToken","token","url","axios","get","result","data","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","encodeCode","encodeURIComponent","access_token","App","currentLocation","eventCount","response","slice","mounted","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"0QAEMA,G,8DACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIRC,SAAW,WACT,MAAO,CACLC,MAAO,EAAKA,QALd,EAAKA,MAAQ,KAFI,E,qDAYjB,OACE,qBAAKC,UAAU,QAAf,SACE,mBAAGC,MAAOC,KAAKJ,WAAf,SAA4BI,KAAKL,MAAMM,a,GAf3BC,cAqBdC,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDE,MAAQ,OAFI,E,UADGH,GAOlBU,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDE,MAAQ,MAFI,E,UADIH,GC4CVW,E,4MAtEbC,MAAQ,CACNC,MAAO,GACPC,YAAa,GACbC,iBAAiB,G,EAGnBC,mBAAqB,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKE,SAAS,CAAEL,iBAAiB,IACjC,IAAMD,EAAc,EAAKb,MAAMoB,UAAUC,QAAO,SAAAC,GAC9C,OAAOA,EAASC,cAAcC,QAAQP,EAAMM,gBAAkB,KAEhE,GAA2B,IAAvBV,EAAYY,OAOd,OAAO,EAAKN,SAAS,CACnBP,MAAOK,EACPJ,cACAa,SAAU,KATZ,EAAKP,SAAS,CACZP,MAAOK,EACPS,SACE,2E,EAWRC,kBAAoB,SAAAC,GAClB,EAAKT,SAAS,CACZP,MAAOgB,EACPd,iBAAiB,IAGnB,EAAKd,MAAM6B,aAAaD,I,uDAGhB,IAAD,OACP,OACE,sBAAKzB,UAAU,aAAf,UACE,cAAC,EAAD,CAAWG,KAAMD,KAAKM,MAAMe,WAC5B,uBACEI,KAAK,OACL3B,UAAU,OACVc,MAAOZ,KAAKM,MAAMC,MAClBmB,SAAU1B,KAAKU,mBACfiB,QAAS,WACP,EAAKb,SAAS,CAAEL,iBAAiB,OAGrC,qBACEX,UAAU,cACVC,MAAOC,KAAKM,MAAMG,gBAAkB,GAAK,CAAEmB,QAAS,QAFtD,UAIG5B,KAAKM,MAAME,YAAYqB,KAAI,SAAAN,GAAU,OACpC,oBAEEO,QAAS,kBAAM,EAAKR,kBAAkBC,IAFxC,SAIGA,GAHIA,MAMT,oBAAIO,QAAS,kBAAM,EAAKR,kBAAkB,QAA1C,SACE,2D,GA/DapB,aC8CV6B,E,4MA9CbzB,MAAQ,CACN0B,aAAa,G,EAGfC,kBAAoB,YACa,IAA3B,EAAK3B,MAAM0B,YACb,EAAKlB,SAAS,CAAEkB,aAAa,IAE7B,EAAKlB,SAAS,CAAEkB,aAAa,K,uDAK/B,IAAMA,EAAchC,KAAKM,MAAM0B,YACvBrB,EAAUX,KAAKL,MAAfgB,MAER,OACE,sBAAKb,UAAU,QAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,UAAd,SAAyBa,EAAMuB,UAC/B,mBAAGpC,UAAU,WAAb,SAAyBa,EAAMM,WAC/B,mBAAGnB,UAAU,aAAb,SAA2Ba,EAAMwB,MAAMC,YACrCJ,GACA,wBAAQlC,UAAU,cAAcgC,QAAS9B,KAAKiC,kBAA9C,gCAIDD,GACC,wBAAQlC,UAAU,cAAcgC,QAAS9B,KAAKiC,kBAA9C,mCAMHD,GACC,sBAAKlC,UAAU,gBAAf,UACE,mBAAGA,UAAU,cAAb,SAA4Ba,EAAM0B,cAClC,mBAAGvC,UAAU,WAAb,SAAyBa,EAAM2B,IAAIF,WACnC,mBAAGtC,UAAU,YAAb,SAA0Ba,EAAMwB,MAAMI,WACtC,mBAAGzC,UAAU,kBAAb,SAAgCa,EAAM6B,UAAUC,kB,GAxCxCvC,aCiBLwC,E,uKAdJ,IAECC,EAAW3C,KAAKL,MAAhBgD,OACR,OACE,oBAAI7C,UAAU,YAAd,SACG6C,EAAOd,KAAI,SAAAlB,GAAK,OACf,6BACE,cAAC,EAAD,CAAOA,MAAOA,KADPA,EAAMiC,a,GAPD1C,aCuCT2C,E,4MAvCbvC,MAAQ,CACNwC,eAAgB,I,EAGlBpC,mBAAqB,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOD,MAC3B,EAAKjB,MAAM6B,aAAa,KAAMZ,GAC9B,EAAKE,SAAS,CACZgC,eAAgBlC,IAGdA,EAAQ,EACV,EAAKE,SAAS,CACZO,SAAU,sDAGZ,EAAKP,SAAS,CACZO,SAAU,M,uDAMd,OACE,sBAAKvB,UAAU,mBAAf,UACE,cAAC,EAAD,CAAYG,KAAMD,KAAKM,MAAMe,WAE7B,uBAAOvB,UAAU,yBAAjB,gCACA,uBACE2B,KAAK,SACL3B,UAAU,eACVc,MAAOZ,KAAKM,MAAMwC,eAClBpB,SAAU1B,KAAKU,4B,GAjCIR,a,QCHvB6C,EAAW,CACf,CACEC,KAAM,iBACNC,KAAM,qBACNL,GAAI,8CACJM,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACTnB,QAAS,eACTG,YACE,mSACFpB,SAAU,kBACVqC,QAAS,CACPb,MAAO,oCACPc,MAAM,GAERf,UAAW,CACTC,MAAO,oCACPc,MAAM,GAERpB,MAAO,CACLC,SAAU,4BACVG,SAAU,iBAEZD,IAAK,CACHF,SAAU,4BACVG,SAAU,iBAEZiB,iBAAkB,6BAClBC,kBAAmB,CACjBrB,SAAU,4BACVG,SAAU,iBAEZmB,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,IAGhB,CACEb,KAAM,iBACNC,KAAM,qBACNL,GAAI,8CACJM,OAAQ,YACRC,SACE,oJACFC,QAAS,2BACTC,QAAS,2BACTnB,QAAS,mBACTG,YACE,uWACFpB,SAAU,aACVqC,QAAS,CACPb,MAAO,oCACPc,MAAM,GAERf,UAAW,CACTC,MAAO,oCACPc,MAAM,GAERpB,MAAO,CACLC,SAAU,4BACVG,SAAU,iBAEZD,IAAK,CACHF,SAAU,4BACVG,SAAU,iBAEZiB,iBAAkB,6BAClBC,kBAAmB,CACjBrB,SAAU,4BACVG,SAAU,iBAEZmB,QAAS,wCACTC,SAAU,EACVC,UAAW,CACTC,YAAY,K,iCCuDZC,EAAc,WAClB,GAAIC,OAAOC,QAAQC,WAAaF,OAAO9C,SAASiD,SAAU,CACxD,IAAIC,EACFJ,OAAO9C,SAASmD,SAChB,KACAL,OAAO9C,SAASoD,KAChBN,OAAO9C,SAASiD,SAClBH,OAAOC,QAAQC,UAAU,GAAI,GAAIE,QAEjCA,EAASJ,OAAO9C,SAASmD,SAAW,KAAOL,OAAO9C,SAASoD,KAC3DN,OAAOC,QAAQC,UAAU,GAAI,GAAIE,IAI/BG,EAAU,uCAAG,WAAMC,GAAN,SAAAC,EAAA,+EACVC,MAAM,+DAAD,OACqDF,IAE9DG,KAHI,uCAGC,WAAMC,GAAN,SAAAH,EAAA,sEACiBG,EAAIC,OADrB,kBAEOC,MAFP,0CAGK,GAHL,iCAKG,GALH,2CAHD,uDAUJC,OAAM,WACL,OAAO,MAZM,2CAAH,sDAgBVC,EAAmB,SAAApC,GACvB,IAAIoC,EAAmBpC,EAAOd,KAAI,SAAAlB,GAAK,OAAIA,EAAMM,YAEjD,OADa,YAAO,IAAI+D,IAAID,KAIxBE,EAAS,uCAAG,oCAAAT,EAAA,yDAChBU,IAAU/C,SACN4B,OAAO9C,SAASkE,KAAKC,WAAW,oBAFpB,uBAGdF,IAAUG,OAHI,kBAIP,CAAE1C,OAAQI,EAAUhC,UAAWgE,EAAiBhC,KAJzC,UAMXuC,UAAUC,OANC,uBAOR5C,EAAS6C,aAAaC,QAAQ,cACpCP,IAAUG,OARI,kBASP,CACL1C,OAAQ+C,KAAKC,MAAMhD,GAAQA,OAC3B5B,UAAWgE,EAAiBW,KAAKC,MAAMhD,GAAQA,UAXnC,wBAeIiD,IAfJ,aAeVC,EAfU,gCAiBd/B,IACMgC,EAlBQ,oFAkB2ED,GAlB3E,UAmBOE,IAAMC,IAAIF,GAnBjB,eAmBRG,EAnBQ,OAoBVlF,EAAY,GAIZkF,EAAOC,OACTnF,EAAYgE,EAAiBkB,EAAOC,KAAKvD,QACzC6C,aAAaW,QAAQ,aAAcT,KAAKU,UAAUH,EAAOC,OACzDV,aAAaW,QAAQ,YAAaT,KAAKU,UAAUrF,KAEnDmE,IAAUG,OA7BI,kBA8BP,CAAE1C,OAAQsD,EAAOC,KAAKvD,QAAU,GAAI5B,cA9B7B,iCAgCP,CACL4B,OAAQ,GACR5B,UAAW,KAlCC,4CAAH,qDAuCT6E,EAAc,uCAAG,sCAAApB,EAAA,yDACfD,EAAciB,aAAaC,QAAQ,gBADpB,KAEFlB,GAFE,qCAEoBD,EAAWC,GAF/B,6BAEf8B,EAFe,KAGhB9B,GAAgB8B,EAHA,oBAInBb,aAAac,WAAW,gBAClBC,EAAe,IAAIC,gBAAgBzC,OAAO9C,SAASwF,QACnDC,EAAOH,EAAaP,IAAI,QANX,kCAQKD,IAAMC,IAC1B,+EATe,eAQXW,EARW,OAWTC,EAAYD,EAAQT,KAApBU,QAXS,kBAYT7C,OAAO9C,SAASkE,KAAOyB,GAZd,iCAcZF,GAAQG,EAASH,IAdL,iCAgBdnC,GAhBc,4CAAH,qDAmBdsC,EAAQ,uCAAG,WAAMH,GAAN,mBAAAlC,EAAA,6DACfV,IACMgD,EAAaC,mBAAmBL,GAFvB,SAGgBjC,MAAM,wEAAD,OACsCqC,IAEvEpC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZE,OAAM,SAAAD,GAAK,OAAIA,KATH,wBAGPmC,EAHO,EAGPA,eAQQxB,aAAaW,QAAQ,eAAgBa,GAXtC,kBAaRA,GAbQ,2CAAH,sDC1GCC,E,4MA/Gb3G,MAAQ,CACNqC,OAAQ,GACRuE,gBAAiB,MACjBnG,UAAW,GACX+B,eAAgB,I,EA+BlBtB,aAAe,SAACP,EAAUkG,GAAgB,IAAD,EACK,EAAK7G,MAAzC4G,EAD+B,EAC/BA,gBAAiBpE,EADc,EACdA,eACrB7B,EACFgE,IAAYP,MAAK,SAAA0C,GACf,IAIMzE,GAHS,QAAb1B,EACImG,EAASzE,OACTyE,EAASzE,OAAO3B,QAAO,SAAAL,GAAK,OAAIA,EAAMM,WAAaA,MAC3BoG,MAAM,EAAGvE,GACvC,OAAO,EAAKhC,SAAS,CACnB6B,OAAQA,EACRuE,gBAAiBjG,EACjBF,UAAWqG,EAASrG,eAIxBkE,IAAYP,MAAK,SAAA0C,GAEf,IASMzE,GARgB,QAApBuE,EAEIE,EAASzE,OAETyE,EAASzE,OAAO3B,QACd,SAAAL,GAAK,OAAIA,EAAMM,WAAaiG,MAGNG,MAAM,EAAGF,GACvC,OAAO,EAAKrG,SAAS,CACnB6B,OAAQA,EACRG,eAAgBqE,EAChBpG,UAAWqG,EAASrG,gB,uLA1D1Bf,KAAKsH,SAAU,EACfrC,IAAYP,MAAK,SAAA0C,GACX,EAAKE,SACP,EAAKxG,SAAS,CACZ6B,OAAQyE,EAASzE,OACjB5B,UAAWqG,EAASrG,e,mJAmB1Bf,KAAKsH,SAAU,I,+BA8Df,OACE,sBAAKxH,UAAU,MAAf,UACE,cAAC,EAAD,CACE0B,aAAcxB,KAAKwB,aACnBT,UAAWf,KAAKM,MAAMS,YAGxB,cAAC,EAAD,CACE+B,eAAgB9C,KAAKM,MAAMwC,eAC3BtB,aAAcxB,KAAKwB,eAErB,cAAC,EAAD,CAAWmB,OAAQ3C,KAAKM,MAAMqC,gB,GA1GpBzC,aCGHqH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCKRO,EAAcC,QACW,cAA7BjE,OAAO9C,SAASgH,UAEe,UAA7BlE,OAAO9C,SAASgH,UAEhBlE,OAAO9C,SAASgH,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9B/C,UAAUgD,cACPC,SAASH,GACT1D,MAAK,SAAA8D,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpI,QACfgF,UAAUgD,cAAcO,YAI1BC,QAAQC,IACN,iHAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASR,KAMlBM,QAAQC,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUT,WAO5B1D,OAAM,SAAAD,GACLiE,QAAQjE,MAAM,4CAA6CA,M,MCxFjEqE,OAAc,oCAAoCC,UAElDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDQnB,SAAkBnB,GACvB,GAA6C,kBAAmB/C,UAAW,CAGzE,GADkB,IAAImE,IAAIC,WAAwB3F,OAAO9C,SAASkE,MACpDwE,SAAW5F,OAAO9C,SAAS0I,OAIvC,OAGF5F,OAAO6F,iBAAiB,QAAQ,WAC9B,IAAMxB,EAAK,UAAMsB,WAAN,sBAEP3B,IAgEV,SAAiCK,EAAOC,GAEtC5D,MAAM2D,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BnF,MAAK,SAAA0C,GAEJ,IAAM0C,EAAc1C,EAASyC,QAAQ7D,IAAI,gBAEnB,MAApBoB,EAASlE,QACO,MAAf4G,IAA8D,IAAvCA,EAAY3I,QAAQ,cAG5CmE,UAAUgD,cAAcyB,MAAMrF,MAAK,SAAA8D,GACjCA,EAAawB,aAAatF,MAAK,WAC7BX,OAAO9C,SAASgJ,eAKpB9B,EAAgBC,EAAOC,MAG1BvD,OAAM,WACLgE,QAAQC,IACN,oEAvFAmB,CAAwB9B,EAAOC,GAI/B/C,UAAUgD,cAAcyB,MAAMrF,MAAK,WACjCoE,QAAQC,IACN,iHAMJZ,EAAgBC,EAAOC,OC9B/BC,GAKAf,M","file":"static/js/main.9caedc25.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"blue\";\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"red\";\n  }\n}\n\nexport { InfoAlert, ErrorAlert };\n","import React, { Component } from \"react\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    showSuggestions: false\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.setState({ showSuggestions: true });\n    const suggestions = this.props.locations.filter(location => {\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n    });\n    if (suggestions.length === 0) {\n      this.setState({\n        query: value,\n        infoText:\n          \"We can not find the city you are looking for. Please try another city\"\n      });\n    } else {\n      return this.setState({\n        query: value,\n        suggestions,\n        infoText: \"\"\n      });\n    }\n  };\n\n  handleItemClicked = suggestion => {\n    this.setState({\n      query: suggestion,\n      showSuggestions: false\n    });\n\n    this.props.updateEvents(suggestion);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          onFocus={() => {\n            this.setState({ showSuggestions: true });\n          }}\n        />\n        <ul\n          className=\"suggestions\"\n          style={this.state.showSuggestions ? {} : { display: \"none\" }}\n        >\n          {this.state.suggestions.map(suggestion => (\n            <li\n              key={suggestion}\n              onClick={() => this.handleItemClicked(suggestion)}\n            >\n              {suggestion}\n            </li>\n          ))}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n    const { event } = this.props;\n\n    return (\n      <div className=\"event\">\n        <div className=\"event-overview\">\n          <h2 className=\"summary\">{event.summary}</h2>\n          <p className=\"location\">{event.location}</p>\n          <p className=\"start-time\">{event.start.dateTime}</p>\n          {!showDetails && (\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\n              Show Event Details\n            </button>\n          )}\n          {showDetails && (\n            <button className=\"details-btn\" onClick={this.handleShowDetails}>\n              Hide Event Details\n            </button>\n          )}\n        </div>\n\n        {showDetails && (\n          <div className=\"event-details\">\n            <p className=\"description\">{event.description}</p>\n            <p className=\"end-time\">{event.end.dateTime}</p>\n            <p className=\"time-zone\">{event.start.timeZone}</p>\n            <p className=\"organizer-email\">{event.organizer.email}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n// import { mockData } from './mock-data';\n\nclass EventList extends Component {\n  render() {\n    // const events = mockData;\n    const { events } = this.props;\n    return (\n      <ul className=\"EventList\">\n        {events.map(event => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nexport default EventList;\n","import React, { Component } from \"react\";\nimport { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32\n  };\n\n  handleInputChanged = event => {\n    const value = event.target.value;\n    this.props.updateEvents(null, value);\n    this.setState({\n      numberOfEvents: value\n    });\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Please choose a number of events between 1 and 32\"\n      });\n    } else {\n      this.setState({\n        infoText: \"\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"number-of-events\">\n        <ErrorAlert text={this.state.infoText} />\n        {/* <h3 className=\"number-of-events\">Number of Events to view:</h3> */}\n        <label className=\"number-of-events-label\">Number of Events: </label>\n        <input\n          type=\"number\"\n          className=\"event-number\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","const mockData = [\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181159875584000\"',\n    id: \"3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:14:30.000Z\",\n    updated: \"2020-05-27T11:45:37.792Z\",\n    summary: \"React is Fun\",\n    description:\n      \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n    location: \"Berlin, Germany\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    start: {\n      dateTime: \"2020-05-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    end: {\n      dateTime: \"2020-05-22T15:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    recurringEventId: \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n    originalStartTime: {\n      dateTime: \"2020-05-22T14:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    iCalUID: \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n  },\n  {\n    kind: \"calendar#event\",\n    etag: '\"3181161784712000\"',\n    id: \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\n    status: \"confirmed\",\n    htmlLink:\n      \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n    created: \"2020-05-19T19:17:46.000Z\",\n    updated: \"2020-05-27T12:01:32.356Z\",\n    summary: \"Learn JavaScript\",\n    description:\n      \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n    location: \"London, UK\",\n    creator: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    organizer: {\n      email: \"fullstackwebdev@careerfoundry.com\",\n      self: true\n    },\n    start: {\n      dateTime: \"2020-05-21T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    end: {\n      dateTime: \"2020-05-21T17:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    recurringEventId: \"4eahs9ghkhrvkld72hogu9ph3e\",\n    originalStartTime: {\n      dateTime: \"2020-05-21T16:00:00+02:00\",\n      timeZone: \"Europe/Berlin\"\n    },\n    iCalUID: \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n    sequence: 0,\n    reminders: {\n      useDefault: true\n    }\n  }\n];\n\nexport { mockData };\n","// import { mockData } from \"./mock-data\";\n// import axios from \"axios\";\n// import NProgress from \"nprogress\";\n// /**\n//  *\n//  * @param {*} events:\n//  * The following function should be in the “api.js” file.\n//  * This function takes an events array, then uses map to create a new array with only locations.\n//  * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n//  * The Set will remove all duplicates from the array.\n//  */\n//\n// const removeQuery = () => {\n//   if (window.history.pushState && window.location.pathname) {\n//     var newurl =\n//       window.location.protocol +\n//       \"//\" +\n//       window.location.host +\n//       window.location.pathname;\n//     window.history.pushState(\"\", \"\", newurl);\n//   } else {\n//     newurl = window.location.protocol + \"//\" + window.location.host;\n//     window.history.pushState(\"\", \"\", newurl);\n//   }\n// };\n//\n// export const extractLocations = events => {\n//   var extractLocations = events.map(event => event.location);\n//   var locations = [...new Set(extractLocations)];\n//   return locations;\n// };\n//\n// const checkToken = async accessToken => {\n//   const result = await fetch(\n//     `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n//   )\n//     .then(res => res.json())\n//     .catch(error => error.json());\n//\n//   return result;\n// };\n//\n// export const getEvents = async () => {\n//   NProgress.start();\n//\n//   if (window.location.href.startsWith(\"http://localhost\")) {\n//     NProgress.done();\n//     return mockData;\n//   }\n//\n//   // if (!navigator.onLine) {\n//   //   const events = localStorage.getItem(\"lastEvents\");\n//   //   NProgress.done();\n//   //   return {\n//   //     events: JSON.parse(events).events,\n//   //     locations: extractLocations(JSON.parse(events).events)\n//   //   };\n//   // }\n//\n//   if (!navigator.onLine) {\n//     const events = localStorage.getItem(\"lastEvents\");\n//     // return JSON.parse(events);\n//     return {\n//       events: JSON.parse(events).events,\n//       locations: extractLocations(JSON.parse(events).events)\n//     };\n//   }\n//\n//   const token = await getAccessToken();\n//\n//   if (token) {\n//     removeQuery();\n//     const url = ` https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n//     const result = await axios.get(url);\n//     if (result.data) {\n//       var locations = extractLocations(result.data.events);\n//       localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n//       localStorage.setItem(\"locations\", JSON.stringify(locations));\n//     }\n//     NProgress.done();\n//     return result.data.events;\n//   }\n// };\n//\n// export const getAccessToken = async () => {\n//   const accessToken = localStorage.getItem(\"access_token\");\n//\n//   const tokenCheck = accessToken && (await checkToken(accessToken));\n//\n//   if (!accessToken || tokenCheck.error) {\n//     await localStorage.removeItem(\"access_token\");\n//     const searchParams = new URLSearchParams(window.location.search);\n//     const code = await searchParams.get(\"code\");\n//     if (!code) {\n//       const results = await axios.get(\n//         \"https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n//       );\n//       const { authUrl } = results.data;\n//       return (window.location.href = authUrl);\n//     }\n//     return code && getToken(code);\n//   }\n//   return accessToken;\n// };\n//\n// const getToken = async code => {\n//   const encodeCode = encodeURIComponent(code);\n//   const { access_token } = await fetch(\n//     `https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n//   )\n//     .then(res => {\n//       return res.json();\n//     })\n//     .catch(error => error);\n//\n//   access_token && localStorage.setItem(\"access_token\", access_token);\n//\n//   return access_token;\n// };\n\nimport { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\n/**\n *\n * @param {*} events:\n * The following function should be in the “api.js” file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array.\n */\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n\nconst checkToken = async accessToken => {\n  return fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then(async res => {\n      const result = await res.json();\n      if (result.error) {\n        return false;\n      }\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n};\n\nconst extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nconst getEvents = async () => {\n  NProgress.start();\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    NProgress.done();\n    return { events: mockData, locations: extractLocations(mockData) };\n  }\n  if (!navigator.onLine) {\n    const events = localStorage.getItem(\"lastEvents\");\n    NProgress.done();\n    return {\n      events: JSON.parse(events).events,\n      locations: extractLocations(JSON.parse(events).events)\n    };\n  }\n\n  const token = await getAccessToken();\n  if (token) {\n    removeQuery();\n    const url = `https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/get-events/${token}`;\n    const result = await axios.get(url);\n    let locations = [];\n    // if (result.data)\n    //   locations = extractLocations(result.data.events);\n    // }\n    if (result.data) {\n      locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return { events: result.data.events || [], locations };\n  } else {\n    return {\n      events: [],\n      locations: []\n    };\n  }\n};\n\nconst getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n  if (!accessToken || !tokenCheck) {\n    localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nconst getToken = async code => {\n  removeQuery();\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    `https://nn4da586ml.execute-api.us-east-1.amazonaws.com/dev/api/token/${encodeCode}`\n  )\n    .then(res => {\n      return res.json();\n    })\n    .catch(error => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport { getEvents, getAccessToken, extractLocations, getToken, checkToken };\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport CitySearch from \"./CitySearch\";\nimport EventList from \"./EventList\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\n// import { extractLocations, getEvents } from \"./api\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    currentLocation: \"all\",\n    locations: [],\n    numberOfEvents: 32\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    getEvents().then(response => {\n      if (this.mounted) {\n        this.setState({\n          events: response.events,\n          locations: response.locations\n        });\n      }\n    });\n  }\n\n  //   componentDidMount() {\n  //     this.mounted = true;\n  //     getEvents().then(events => {\n  //       if (this.mounted) {\n  //         this.setState({\n  //           events: events,\n  //           locations: extractLocations(events)\n  //         });\n  //       }\n  //     });\n  //   }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount) => {\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then(response => {\n        const locationEvents =\n          location === \"all\"\n            ? response.events\n            : response.events.filter(event => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations\n        });\n      });\n    } else {\n      getEvents().then(response => {\n        //       getEvents().then(events => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? //           location === \"all\"\n              response.events\n            : //             ? events\n              response.events.filter(\n                event => event.location === currentLocation\n              );\n        //             : events.filter(event => event.location === location);\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n          locations: response.locations\n        });\n      });\n    }\n  };\n\n  //         const filteredEvents = locationEvents.slice(0, numberOfEvents);\n  //         this.setState({\n  //           events: filteredEvents,\n  //           currentLocation: location\n  //         });\n  //       });\n  //     } else {\n  //       getEvents().then(events => {\n  //         const locationEvents =\n  //           currentLocation === \"all\"\n  //             ? events\n  //             : events.filter(event => event.location === currentLocation);\n  //         const filteredEvents = locationEvents.slice(0, eventCount);\n  //         this.setState({\n  //           events: filteredEvents,\n  //           numberOfEvents: eventCount\n  //         });\n  //       });\n  //     }\n  //   };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          updateEvents={this.updateEvents}\n          locations={this.state.locations}\n        />\n\n        <NumberOfEvents\n          numberOfEvents={this.state.numberOfEvents}\n          updateEvents={this.updateEvents}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport * as atatus from \"atatus-spa\";\natatus.config(\"190f00324a0c4031893cafafc5620a21\").install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// atatus.notify(new Error(\"Test Atatus Setup\"));\n"],"sourceRoot":""}